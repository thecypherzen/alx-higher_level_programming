#!/usr/bin/env bash
# a script that configures an nginx server to return a string
# content of the string is 'hello world'

function install_nginx(){
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> dd4ee45... fix(asd:0x0C): start server after insallation in file 1
    check_ufw="$(which ufw)"
    apt-update
    apt-get install nginx -y

    if [[ -z "$check_ufw" ]]; then
	apt-get install ufw -y
    fi
    ufw enable
    ufw allow 'Nginx HTTP'
<<<<<<< HEAD
}

function set_default_ip(){
=======
    sudo apt-update
    sudo apt-get install nginx -y
    sudo ufw enable
    sudo ufw allow 'Nginx HTTP'
}

function set_default_ip(){
    user="$USER"
>>>>>>> b9a888f... build(asd:0x0C): add task 1 solution
=======
}

function set_default_ip(){
>>>>>>> dd4ee45... fix(asd:0x0C): start server after insallation in file 1
    default_f="/etc/nginx/sites-available/default"
    ip6_reg="listen \[::\]:[0-9]*]* default_server;"
    ip6_rep="listen [::]:80 default_server;"
    ip4_reg="listen [0-9]* default_server;"
    ip4_rep="listen 80 default_server;"
    cat "$default_f" | sed -E "s/$ip6_reg/$ip6_rep/" > "default.temp"
    cat "default.temp" | sed -E "s/$ip4_reg/$ip4_rep/" > "$default_f"
    rm -f "default.temp"
}

check="$(which nginx)"

if [[ -z "$check" ]]; then
    install_nginx
<<<<<<< HEAD
<<<<<<< HEAD
    check="$(which nginx)"
    "$check"
fi

set_default_ip
echo "Hello World!" > "./index.html"
mv "./index.html" "/var/www/html/"
=======
=======
    check="$(which nginx)"
    "$check"
>>>>>>> dd4ee45... fix(asd:0x0C): start server after insallation in file 1
fi

set_default_ip
echo "Hello World!" > "./index.html"
<<<<<<< HEAD
sudo mv "./index.html" "/var/www/html/"
>>>>>>> b9a888f... build(asd:0x0C): add task 1 solution
=======
mv "./index.html" "/var/www/html/"
>>>>>>> dd4ee45... fix(asd:0x0C): start server after insallation in file 1
