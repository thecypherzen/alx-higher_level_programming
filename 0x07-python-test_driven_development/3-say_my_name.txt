Test Cases for the say_my_name function

>>> say_name = __import__("3-say_my_name").say_my_name
>>> import sys
>>> from io import StringIO
>>> stream = StringIO()

======== [ CHECK 1: first_name is not a string ] =======
>>> say_name(19)
Traceback (innermost last):
TypeError: first_name must be a string

======== [ CHECK 2: last_name not a string ] =======
>>> say_name("Johnson", {"a": "A"})
Traceback (innermost last):
TypeError: last_name must be a string

======== [ CHECK 3: both not strings] =======
>>> say_name(("abc",), True)
Traceback (innermost last):
TypeError: first_name must be a string

======== [ CHECK 4: first_name last_name are None ] =======
>>> say_name(None, None)
Traceback (innermost last):
TypeError: first_name must be a string

======== [ CHECK 5: first_name is empty ] =======
>>> say_name("")
My name is  

======== [ CHECK 6: both is empty ] =======
>>> say_name("", "")
My name is  

======== [ CHECK 7: only first_name given ] =======
>>> say_name("Malami")
My name is Malami 

======== [ CHECK 8: correct greeting message] =======
>>> say_name("Kershima", "Akombo")
My name is Kershima Akombo
